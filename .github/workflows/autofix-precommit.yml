name: AutoFix PR

on:
  pull_request:
    types: [closed]

jobs:
  autofix:
    name: Autofix Pull Request Linting Errors
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: |
          yarn --frozen-lockfile
          npm rebuild node-sass
      - name: Run pre-commit hook
        uses: pre-commit-ci/action@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if any files were modified
        id: was_modified
        run: |
          modified_files=$(git diff --name-only HEAD^ HEAD)
          if [ -z "$modified_files" ]; then
            echo "No files were modified."
            echo "::set-output name=modified::false"
          else
            echo "Files were modified:"
            echo "$modified_files"
            echo "::set-output name=modified::true"
          fi
      - name: Commit and push autofixed changes
        if: steps.was_modified.outputs.modified == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Autofix linting errors"
          git push origin ${{ github.head_ref }}

